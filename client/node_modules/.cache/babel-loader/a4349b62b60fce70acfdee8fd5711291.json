{"ast":null,"code":"import _classCallCheck from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/src/containers/ShowPost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getPost, removePost, deletePost } from '../store/actions/posts';\nimport CommentBox from '../components/CommentBox';\nimport CommentList from './CommentList';\n\nvar ShowPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowPost, _Component);\n\n  function ShowPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.clearPost = function () {\n      _this.props.deletePost(_this.props.post._id);\n\n      _this.props.history.push('/');\n    };\n\n    return _this;\n  }\n\n  _createClass(ShowPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPost(this.props.match.params.id);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removePost(this.props.post._id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          post = _this$props.post,\n          currentUser = _this$props.currentUser;\n\n      if (post) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, post.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, post.body), currentUser.isAuthenticated && currentUser.user.id === post.author && React.createElement(\"a\", {\n          className: \"delete text-muted\",\n          onClick: this.clearPost,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Delete\"), post.comments && React.createElement(CommentList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), currentUser.isAuthenticated && React.createElement(CommentBox, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Something went wrong\");\n    }\n  }]);\n\n  return ShowPost;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.post,\n    currentUser: state.currentUser\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getPost: getPost,\n  removePost: removePost,\n  deletePost: deletePost\n})(ShowPost);","map":{"version":3,"sources":["/Users/jaydeepkudumula/Documents/GIT/react-forum/client/src/containers/ShowPost.js"],"names":["React","Component","connect","getPost","removePost","deletePost","CommentBox","CommentList","ShowPost","clearPost","props","post","_id","history","push","match","params","id","currentUser","title","body","isAuthenticated","user","author","comments","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,EAA6BC,UAA7B,QAA8C,wBAA9C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,Q;;;;;;;;;;;;;;;;;;UASJC,S,GAAY,YAAM;AAChB,YAAKC,KAAL,CAAWL,UAAX,CAAsB,MAAKK,KAAL,CAAWC,IAAX,CAAgBC,GAAtC;;AACA,YAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,K;;;;;;;wCAXmB;AAClB,WAAKJ,KAAL,CAAWP,OAAX,CAAmB,KAAKO,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C;AACD;;;2CAEsB;AACrB,WAAKP,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,IAAX,CAAgBC,GAAtC;AACD;;;6BAOQ;AAAA,wBACqB,KAAKF,KAD1B;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMO,WADN,eACMA,WADN;;AAGP,UAAGP,IAAH,EAAS;AACP,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACQ,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIR,IAAI,CAACS,IAAT,CAFF,EAGGF,WAAW,CAACG,eAAZ,IACCH,WAAW,CAACI,IAAZ,CAAiBL,EAAjB,KAAwBN,IAAI,CAACY,MAA7B,IACE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAiC,UAAA,OAAO,EAAE,KAAKd,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALN,EAQGE,IAAI,CAACa,QAAL,IACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,EAWGN,WAAW,CAACG,eAAZ,IACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZJ,CADF;AAiBD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF;AAGD;;;;EAxCoBpB,S;;AA2CvB,SAASwB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLf,IAAAA,IAAI,EAAEe,KAAK,CAACf,IADP;AAELO,IAAAA,WAAW,EAAEQ,KAAK,CAACR;AAFd,GAAP;AAID;;AAED,eAAehB,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA,OAAO,EAAPA,OAAD;AAAUC,EAAAA,UAAU,EAAVA,UAAV;AAAsBC,EAAAA,UAAU,EAAVA;AAAtB,CAAlB,CAAP,CAA4DG,QAA5D,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getPost, removePost, deletePost} from '../store/actions/posts';\nimport CommentBox from '../components/CommentBox';\nimport CommentList from './CommentList';\n\nclass ShowPost extends Component {\n  componentDidMount() {\n    this.props.getPost(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.removePost(this.props.post._id);\n  }\n\n  clearPost = () => {\n    this.props.deletePost(this.props.post._id);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const {post, currentUser} = this.props;\n\n    if(post) {\n      return (\n        <div>\n          <h2>{post.title}</h2>\n          <p>{post.body}</p>\n          {currentUser.isAuthenticated && (\n            currentUser.user.id === post.author && (\n              <a className=\"delete text-muted\" onClick={this.clearPost}>Delete</a>\n            )\n          )}\n          {post.comments && (\n            <CommentList />\n          )}\n          {currentUser.isAuthenticated && (\n            <CommentBox />\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div>Something went wrong</div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.post,\n    currentUser: state.currentUser\n  }\n}\n\nexport default connect(mapStateToProps, {getPost, removePost, deletePost})(ShowPost);"]},"metadata":{},"sourceType":"module"}