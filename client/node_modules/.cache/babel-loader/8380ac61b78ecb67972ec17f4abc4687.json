{"ast":null,"code":"import _defineProperty from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/src/components/NewPostForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { newPost } from '../store/actions/posts';\n\nvar NewPostForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewPostForm, _Component);\n\n  function NewPostForm(props) {\n    var _this;\n\n    _classCallCheck(this, NewPostForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPostForm).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.newPost(_this.state.title, _this.state.body, _this.props.currentUser.user.id);\n\n      _this.props.history.push('/');\n    };\n\n    _this.state = {\n      title: '',\n      body: ''\n    };\n    return _this;\n  }\n\n  _createClass(NewPostForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          title = _this$state.title,\n          body = _this$state.body;\n\n      if (this.props.currentUser.isAuthenticated) {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"New Post\"), React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Title\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: title,\n          id: \"title\",\n          name: \"title\",\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Body\"), React.createElement(\"textarea\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: body,\n          id: \"body\",\n          name: \"body\",\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-outline-dark btn-lg\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Submit Post\")));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"You must \", React.createElement(Link, {\n        to: \"/signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"sign up\"), \" to create a new post.\"));\n    }\n  }]);\n\n  return NewPostForm;\n}(Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n}\n\nexport default connect(mapStateToProps, {\n  newPost: newPost\n})(NewPostForm);","map":{"version":3,"sources":["/Users/jaydeepkudumula/Documents/GIT/react-forum/client/src/components/NewPostForm.js"],"names":["React","Component","connect","Link","newPost","NewPostForm","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","state","title","body","currentUser","user","id","history","push","isAuthenticated","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {newPost} from '../store/actions/posts';\n\nclass NewPostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: ''\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.newPost(this.state.title, this.state.body, this.props.currentUser.user.id);\n    this.props.history.push('/');\n  };\n\n  render() {\n    const {title, body} = this.state;\n\n    if(this.props.currentUser.isAuthenticated) {\n      return (\n        <div className=\"container\">\n          <h2>New Post</h2>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" className=\"form-control\" value={title}\n              id=\"title\" name=\"title\" onChange={this.handleChange} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"body\">Body</label>\n              <textarea type=\"text\" className=\"form-control\" value={body}\n              id=\"body\" name=\"body\" onChange={this.handleChange} />\n            </div>\n            <button className=\"btn btn-outline-dark btn-lg\" type=\"submit\">\n              Submit Post\n            </button>\n          </form>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <h4>You must <Link to=\"/signup\">sign up</Link> to create a new post.</h4>\n      </div>\n    );\n  }\n};\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nexport default connect(mapStateToProps, {newPost})(NewPostForm);"]},"metadata":{},"sourceType":"module"}