{"ast":null,"code":"import _classCallCheck from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jaydeepkudumula/Documents/GIT/react-forum/client/src/containers/CommentList.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Comment from '../components/Comment';\nimport '../css/comments.css';\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CommentList, _PureComponent);\n\n  function CommentList() {\n    _classCallCheck(this, CommentList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CommentList).apply(this, arguments));\n  }\n\n  _createClass(CommentList, [{\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post;\n\n      if (true) {\n        var commentList = post.comments.map(function (c) {\n          return React.createElement(Comment, {\n            text: c.text,\n            key: c._id,\n            id: c._id,\n            author: c.author,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 12\n            },\n            __self: this\n          });\n        });\n        return React.createElement(\"div\", {\n          className: \"comment-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Comments\"), React.createElement(\"ul\", {\n          className: \"list-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, commentList));\n      }\n    }\n  }]);\n\n  return CommentList;\n}(PureComponent);\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n}\n\n;\nexport default connect(mapStateToProps)(CommentList);","map":{"version":3,"sources":["/Users/jaydeepkudumula/Documents/GIT/react-forum/client/src/containers/CommentList.js"],"names":["React","PureComponent","connect","Comment","CommentList","post","props","commentList","comments","map","c","text","_id","author","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,qBAAP;;IAEMC,W;;;;;;;;;;;;;6BACK;AAAA,UACAC,IADA,GACQ,KAAKC,KADb,CACAD,IADA;;AAGP,UAAG,IAAH,EAAS;AACP,YAAIE,WAAW,GAAGF,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkB,UAAAC,CAAC;AAAA,iBACnC,oBAAC,OAAD;AAAS,YAAA,IAAI,EAAEA,CAAC,CAACC,IAAjB;AAAuB,YAAA,GAAG,EAAED,CAAC,CAACE,GAA9B;AAAmC,YAAA,EAAE,EAAEF,CAAC,CAACE,GAAzC;AAA8C,YAAA,MAAM,EAAEF,CAAC,CAACG,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADmC;AAAA,SAAnB,CAAlB;AAGA,eACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGN,WADH,CAFF,CADF;AAQD;AACF;;;;EAjBuBN,a;;AAoB1B,SAASa,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AADP,GAAP;AAGD;;AAAA;AAED,eAAeH,OAAO,CAACY,eAAD,CAAP,CAAyBV,WAAzB,CAAf","sourcesContent":["import React, {PureComponent} from 'react';\nimport {connect} from 'react-redux';\nimport Comment from '../components/Comment';\nimport '../css/comments.css';\n\nclass CommentList extends PureComponent {\n  render() {\n    const {post} = this.props;\n\n    if(true) {\n      let commentList = post.comments.map(c => (\n        <Comment text={c.text} key={c._id} id={c._id} author={c.author}/>\n      ));\n      return (\n        <div className=\"comment-list\">\n          <h3>Comments</h3>\n          <ul className=\"list-group\">\n            {commentList}\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps)(CommentList);"]},"metadata":{},"sourceType":"module"}